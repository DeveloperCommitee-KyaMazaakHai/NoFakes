func checkIfFake(msgContent){
    //msgContent
    //Calculate Embeddings for msgContent (rn POST to flask)
    //return calculateNormalisedValue()

}

func calculateNormalisedValue(){
    //iterate through DB (get all embeddings and hits)
    //Calculate Distances() and find top 10
    //Nomralisation ( First calculate normailsed average of hits of top 10, / Max - min / )
    //1 - 0.1   -   Hits: 12
    //2 - 0.95  -   Hits: 1000
    //3 - 1.4   -   Hits: 3
    //4 - 3.7   -   Hits: 0
    //5 - 4.6   -   Hits: 19


    //4.6 - 0.1 = 4.5

    //1 - 0   -   Hits: 0.012
    //2 - 0.85/4.5  -   Hits: 1
    //3 - 1.3/4.5   -   Hits: 0.001
    //4 - 3.6/4.5   -   Hits: 0
    //5 - 1   -   Hits: 0.019


    // Take inverse

    //1 - 1                 -   Hits: 0.012
    //2 - (1 - 0.85/4.5)    -   Hits: 1
    //3 - (1 -1.3/4.5)      -   Hits: 0.001
    //4 - (1 - 3.6/4.5)     -   Hits: 0
    //5 - 0                 -   Hits: 0.019

    //Multiply both normalised values
    
    //1 - 1                 -   Hits: 0.012     - Result: 0.012
    //2 - (1 - 0.85/4.5)    -   Hits: 1        - Result: 0.81
    //3 - (1 -1.3/4.5)      -   Hits: 0.001    - Result: 0.00071
    //4 - (1 - 3.6/4.5)     -   Hits: 0        - Result: 0
    //5 - 0                 -   Hits: 0.019     - Result: 0

    //Result - 90%

    //1 - 0.1   -   Hits: 12
    //2 - 0.95  -   Hits: 4
    //3 - 1.4   -   Hits: 3
    //4 - 3.7   -   Hits: 0
    //5 - 4.6   -   Hits: 19

    //Normalise LHS

    //1 - 0         -   Hits: 12
    //2 - 0.188     -   Hits: 4
    //3 - 0.288     -   Hits: 3
    //4 - 0.8       -   Hits: 0
    //5 - 1         -   Hits: 19

    //Inverse LHS

    //1 - 1         -   Hits: 12
    //2 - 0.811     -   Hits: 4
    //3 - 0.711     -   Hits: 3
    //4 - 0.2       -   Hits: 0
    //5 - 0         -   Hits: 19

    //Normalise RHS

    //1 - 1         -   Hits: 0.63
    //2 - 0.811     -   Hits: 0.21
    //3 - 0.711     -   Hits: 0.158
    //4 - 0.2       -   Hits: 0
    //5 - 0         -   Hits: 1

    //Multiply

    //1 - 1         -   Hits: 0.63      - Result: 0.63
    //2 - 0.811     -   Hits: 0.21      - Result: 0.17
    //3 - 0.711     -   Hits: 0.158     - Result: 0.11
    //4 - 0.2       -   Hits: 0         - Result: 0
    //5 - 0         -   Hits: 1         - Result: 0

    //Result = 45.55%

    //return value out of 100
}